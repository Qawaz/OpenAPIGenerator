@partial_raw

    @define_placeholder(__object_declaration__,json_object)
        @default_no_raw
            {
            @var(printMembers())}
        @end_default_no_raw
    @end_define_placeholder

    @define_placeholder(__object_member__,json_object_member)
        @runtime.print_char('\t')
        @default_no_raw
            "@var(keys[i].decapitalize())" :
        @end_default_no_raw
        @runtime.print_char(' ')
        @var(jsonValue(object[keys[i]]))
    @end_define_placeholder

    @function __write_object_as_json__(object,indentation)

        @var keys = object.getKeys()

        @function indent()
            @for(@var i = 0;i<indentation;i++)
                @runtime.print_char('\t')
            @endfor
        @end_function

        @function printMembers()

            @function listValue(param)
                @runtime.print_char('[')
                @for(@var j = 0;j<param.size();j++)
                    @var(jsonValue(param[j]))
                    @default_no_raw
                        @if(j != param.size() - 1) , @endif
                    @end_default_no_raw
                @endfor
                @runtime.print_char(']')
            @end_function

            @function jsonValue(param)
                @if(param.getType().startsWith("object"))
                    @default_no_raw
                        @var(__write_object_as_json__(param,indentation + 1))
                    @end_default_no_raw
                @elseif(param.getType().startsWith("list"))
                    @var(listValue(param))
                @elseif(param.getType().startsWith("mutable_list"))
                    @var(listValue(param))
                @elseif(param.getType().startsWith("string"))
                    @default_no_raw "@var(param)" @end_default_no_raw
                @elseif(param.getType().startsWith("char"))
                    @default_no_raw "@var(param)" @end_default_no_raw
                @else
                    @default_no_raw @var(param) @end_default_no_raw
                @endif
            @end_function

            @for(@var i=0;i<keys.size();i++)

                @function separator()
                    @if(i != keys.size() - 1) @return "," @else @return "" @endif
                @end_function

                @var(indent())

                @placeholder(__object_member__)

                @var(separator())

                @runtime.print_char('\n')

            @endfor

            @var(indent())

        @end_function

        @placeholder(__object_declaration__)

    @end_function

	@define_placeholder(object,JsonObject)
        __write_object_as_json__(__param__,0)
	@end_define_placeholder

@end_partial_raw