@partial_raw

    @function writeObjectAsJson(object,indentation)

        @var keys = object.getKeys()

        @function indent()
            @for(@var i = 0;i<indentation;i++)
                @runtime.print_char('\t')
            @endfor
        @end_function

		@runtime.print_char('{')

        @runtime.print_char('\n')

        @function listValue(param)
            @runtime.print_char('[')
            @for(@var j = 0;j<param.size();j++)
                @var(jsonValue(param[j]))
                @default_no_raw
                    @if(j != param.size() @- 1) , @endif
                @end_default_no_raw
            @endfor
            @runtime.print_char(']')
        @end_function

        @function jsonValue(param)
            @if(param.getType() == "object")
                @default_no_raw
                    @var(writeObjectAsJson(param,indentation + 1))
                @end_default_no_raw
            @elseif(param.getType() == "list")
                @var(listValue(param))
            @elseif(param.getType() == "mutable_list")
                @var(listValue(param))
            @elseif(param.getType() == "string")
                @default_no_raw "@var(param)" @end_default_no_raw
            @elseif(param.getType() == "char")
                @default_no_raw "@var(param)" @end_default_no_raw
            @else
                @default_no_raw @var(param) @end_default_no_raw
            @endif
        @end_function

		@for(@var i=0;i<keys.size();i++)

		    @function separator()
		        @if(i != keys.size() @- 1) @return "," @else @return "" @endif
		    @end_function

            @var(indent())

            @runtime.print_char('\t')

		    @default_no_raw
                "@var(keys[i].decapitalize())" :
			@end_default_no_raw

			@runtime.print_char(' ')

			@var(jsonValue(object[keys[i]]))

			@var(separator())

			@runtime.print_char('\n')

		@endfor

		@var(indent())

		@runtime.print_char('}')

    @end_function

	@define_placeholder(object,JsonObject)
        writeObjectAsJson(__param__,0)
	@end_define_placeholder

@end_partial_raw